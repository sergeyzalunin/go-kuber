apiVersion: v1
kind: Service
metadata:
  name: go-kuber
  labels:
    app: go-kuber
spec:
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app: go-kuber
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    ingress.kubernetes.io/rewrite-target: /
  labels:
    app: go-kuber
  name: go-kuber
spec:
  rules:
  - host: go-kuber.test
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: go-kuber
            port: 
              number: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-kuber
  labels:
    app: go-kuber
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 50%
      maxSurge: 1
  selector:
    matchLabels:
      app: go-kuber
  template:
    metadata:
      labels:
        app: go-kuber
    spec:
      containers:
      - name: go-kuber
        image: docker.io/ninja1986/go-kuber:0.0.1
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8000
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8000
        resources:
          limits:
            cpu: 10m
            memory: 30Mi
          requests:
            cpu: 10m
            memory: 30Mi
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: go-kuber
  labels:
    app: go-kuber
spec:
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app: go-kuber
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    ingress.kubernetes.io/rewrite-target: /
  labels:
    app: go-kuber
  name: go-kuber
spec:
  rules:
  - host: go-kuber.test
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: go-kuber
            port: 
              number: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-kuber
  labels:
    app: go-kuber
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 50%
      maxSurge: 1
  selector:
    matchLabels:
      app: go-kuber
  template:
    metadata:
      labels:
        app: go-kuber
    spec:
      containers:
      - name: go-kuber
        image: docker.io/ninja1986/go-kuber:0.0.1
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8000
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8000
        resources:
          limits:
            cpu: 10m
            memory: 30Mi
          requests:
            cpu: 10m
            memory: 30Mi
      terminationGracePeriodSeconds: 30
---
---
